[user]
    name = Damien Lecan
    email = dev@dlecan.com
	  signingkey = B9E1EE3FE5697052

[includeIf "gitdir:~/dev/emblock/"]
    path = ~/.gitconfig-eb

#[includeIf "gitdir:~/dev/unikname/"]
#    path = ~/.gitconfig-work
#
#[includeIf "gitdir:~/dev/unn/"]
#    path = ~/.gitconfig-work
#
#[includeIf "gitdir:~/dev/spacelephant/"]
#    path = ~/.gitconfig-work
#
#[includeIf "gitdir:~/dev/work/"]
#    path = ~/.gitconfig-work

[branch]
    autosetuprebase = always

[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
	ui = true

[commit]
	gpgsign = true

[rerere]
    enabled = true

[diff]
    mnemonicprefix = true
	submodule = log

[help]
    autocorrect = -1

[pull]
    rebase = merges

[push]
    default = simple
	followTags = true

[rebase]
    autostash = true

[alias]
    co = checkout
    ci = commit
    cia = !git add -A && git commit
    br = branch
    df = diff
    st = status

    amend = commit --amend
    who = shortlog -s --
    changes = diff --name-status -r
    dic = diff --cached
    ds = diff --stat -r
    wdiff = diff --word-diff
    undo = !git reset --soft HEAD^
    unstage = reset HEAD --

    # Affiche le diff avant pull
    do = diff --name-status -r ORIG_HEAD HEAD

    # 2 logs avec visualisation des branches
    # Long
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    # Court
    oneline = log --pretty=oneline --abbrev-commit --graph --decorate
    # Long avec fichiers modifies
    lgf = log --name-status --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative
    # Long avec message de commit complet
    flg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --date=relative

    # Un 'status' concis
    s = "status --short"

    emerge = merge --no-ff

    # ajouter les fichiers modifies.
    addm = !git-ls-files -m -z | xargs -0 git add && git status

    # ajouter les fichiers inconnus.
    addu = !git-ls-files -o --exclude-standard -z | xargs -0 git add && git status

    # supprimer les fichiers marques comme effaces.
    rmm = !git ls-files -d -z | xargs -0 git rm && git status

    # Init et update des submodules
    pup = "!git submodule init && git submodule update"

    # Pushs all submodules to origin master
    pushsub = submodule foreach "git push origin master"

    # Pull submodules from origin master
    pullsub = submodule foreach "git pull origin master"

    # Update local and remote branches
    rup = remote update -p

[credential]
	helper = cache --timeout=259200

[webui]
	autoupdate = true

[status]
	submoduleSummary = true
	showUntrackedFiles = all

[fetch]
	recurseSubmodules = on-demand
	prune = true

[log]
	abbrevCommit = true

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22

[pager]
	diff = diff-so-fancy | less --tabs=4 -RFX
	show = diff-so-fancy | less --tabs=4 -RFX
[core]
	pager = diff-so-fancy | less --tabs=4 -RFX
[interactive]
	diffFilter = diff-so-fancy --patch
[color "diff"]
	meta = 11
	frag = magenta bold
	func = 146 bold
	commit = yellow bold
	old = red bold
	new = green bold
	whitespace = red reverse
